#include "sig.h"

namespace dynet
{
    namespace nt
    {
        std::unordered_map<int, std::string> type2name = {
            {0, "unbatchable"},
            {tanh, "tanh"},
            {sqrt, "sqrt"},
            {abs, "abs"},
            {erf, "erf"},
            {square, "square"},
            {cube, "cube"},
            {exp, "exp"},
            {logsigmoid, "logsigmoid"},
            {loggamma, "loggamma"},
            {log, "log"},
            {nobackprop, "nobackprop"},
            {scalegradient, "scalegradient"},
            {identity, "identity"},
            {negate, "negate"},
            {rectify, "rectify"},
            {logistic, "logistic"},
            {softsign, "softsign"},
            {silu, "silu"},
            {round, "round"},
            {ceiling, "ceiling"},
            {floor, "floor"},
            {sinh, "sinh"},
            {cosh, "cosh"},
            {asinh, "asinh"},
            {acosh, "acosh"},
            {atanh, "atanh"},
            {sin, "sin"},
            {cos, "cos"},
            {tan, "tan"},
            {asin, "asin"},
            {acos, "acos"},
            {atan, "atan"},
            {plus_const, "plus_const"},
            {minus_const, "minus_const"},
            {concat, "concat"},
            {cmult, "cmult"},
            {csum, "csum"},
            {sum, "sum"},
            {reduce, "reduce"},
            {squared_distance, "squared_distance"},
            {softmax, "softmax"},
            {pnls, "pnls"},
            {pickrange, "pickrange"},
            {scalar_mult, "scalar_mult"},
            {dropout, "dropout"},
            {input, "input"},
            {scalar_input, "scalar_input"},
            {lookup, "lookup"},
            {select, "select"},
            {argmax_index, "argmax_index"},
            {COMPLEX, "COMPLEX"},
            {affine, "affine"},
            {matmul, "matmul"},
            {transpose, "transpose"},
            {vanilla_lstm_gates, "vanilla_lstm_gates"},
            {vanilla_lstm_h, "vanilla_lstm_h"},
            {vanilla_lstm_c, "vanilla_lstm_c"},
            {conv2d, "conv2d"},
            {block, "block"},
            {get, "get"},
            {select, "select"},
            {argmax_index, "argmax_index"}};
    }
}